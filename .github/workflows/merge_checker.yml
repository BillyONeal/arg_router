# This workflow runs a barrage of tests in order to validate a PR
name: Pull Request Checker

on:
  pull_request:
    branches: [ main ]

env:
  SKIP_COVERAGE_UPDATE: 0
  NUGET_SOURCE_URL: "https://nuget.pkg.github.com/cmannett85/index.json"
  VCPKG_BINARY_SOURCES: 'clear;nuget,vcpkg-cache,readwrite'
  BUILD_DIR: ${{ github.workspace }}/build
  INSTALL_DIR: ${{ github.workspace }}/install
  PACKAGE_BUILD_DIR: ${{ github.workspace }}/package_build
  DOWNLOAD_DIR: ${{ github.workspace }}/download

jobs:
  # Run the more esoteric/likely to succeed unit tests when merging to main
  old_gcc_test:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Update packages
      run: |
        sudo apt update
        sudo apt install mono-complete

    - name: Bootstrap vcpkg to build the NuGet client
      run: |
        ./vcpkg/bootstrap-vcpkg.sh -disableMetrics

    - name: Configure NuGet client
      run: |
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          sources add \
          -source ${{ env.NUGET_SOURCE_URL }} \
          -storepasswordincleartext \
          -name "vcpkg-cache" \
          -username "cmannett85" \
          -password "${{ secrets.GITHUB_TOKEN }}"
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source ${{ env.NUGET_SOURCE_URL }}

    - name: Build
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeAppendedArgs: -DCMAKE_CXX_COMPILER=g++-9
        buildDirectory: ${{ env.BUILD_DIR }}
        buildWithCMakeArgs: --target arg_router_test

    - name: Run unit tests
      run: |
        cd ${{ env.BUILD_DIR }}/test
        ./arg_router_test -l test_suite

  macos_compiler_tests:
    runs-on: macos-12

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Update packages
      run: |
        brew install clang-format

    - name: Bootstrap vcpkg to build the NuGet client
      run: |
        ./vcpkg/bootstrap-vcpkg.sh -disableMetrics

    - name: Configure NuGet client
      run: |
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          sources add \
          -source ${{ env.NUGET_SOURCE_URL }} \
          -storepasswordincleartext \
          -name "vcpkg-cache" \
          -username "cmannett85" \
          -password "${{ secrets.GITHUB_TOKEN }}"
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source ${{ env.NUGET_SOURCE_URL }}

    - name: Build
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        buildDirectory: ${{ env.BUILD_DIR }}
        buildWithCMakeArgs: --target arg_router_test

    - name: Run unit tests
      run: |
        cd ${{ env.BUILD_DIR }}/test
        ./arg_router_test -l test_suite

    - name: Test install
      run: |
        cd ${{ env.BUILD_DIR }}
        cmake --install . --prefix ${{ env.INSTALL_DIR }}
        cd ${{ env.INSTALL_DIR }}
        [[ -f "./include/arg_router/version.hpp" ]]
        [[ -f "./include/arg_router/README.md" ]]
        [[ -f "./include/arg_router/LICENSE" ]]
        [[ -f "./include/arg_router/arg_router-config.cmake" ]]
        [[ -f "./include/arg_router/arg_router-config-version.cmake" ]]

    - name: Test CMake package integrity
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: ${{ github.workspace }}/scripts/ci/package_test_project/CMakeLists.txt
        cmakeAppendedArgs: -DCMAKE_PREFIX_PATH=${{ env.INSTALL_DIR }}/include
        buildDirectory: ${{ env.PACKAGE_BUILD_DIR }}

  # Test package integrity test where we use system libs and C++20 (so no nonstd::span)
  system_test_package:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Download Boost 1.77
      run: |
        mkdir ${{ env.DOWNLOAD_DIR }}
        cd ${{ env.DOWNLOAD_DIR }}
        wget https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.7z
        7z x boost_1_77_0.7z

    - name: Configure
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeAppendedArgs: -DBUILD_UNIT_TESTS_AND_EXAMPLES=OFF -DDISABLE_VCPKG=ON -DBoost_INCLUDE_DIR=${{ env.DOWNLOAD_DIR }}/boost_1_77_0
        buildDirectory: ${{ env.BUILD_DIR }}

    - name: Test install
      run: |
        cd ${{ env.BUILD_DIR }}
        cmake --install . --prefix ${{ env.INSTALL_DIR }}
        cd ${{ env.INSTALL_DIR }}
        [[ -f "./include/arg_router/version.hpp" ]]
        [[ -f "./include/arg_router/README.md" ]]
        [[ -f "./include/arg_router/LICENSE" ]]
        [[ -f "./include/arg_router/arg_router-config.cmake" ]]
        [[ -f "./include/arg_router/arg_router-config-version.cmake" ]]

    - name: Test CMake package integrity
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: ${{ github.workspace }}/scripts/ci/package_test_project/CMakeLists.txt
        cmakeAppendedArgs: -DCMAKE_CXX_STANDARD=20 -DCMAKE_PREFIX_PATH=${{ env.INSTALL_DIR }}/include -DDISABLE_VCPKG=ON -DBoost_INCLUDE_DIR=${{ env.DOWNLOAD_DIR }}/boost_1_77_0
        buildDirectory: ${{ env.PACKAGE_BUILD_DIR }}
