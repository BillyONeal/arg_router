# Runs more expensive, less likely to fail tests, when merging to main
name: Merge to main Checker

on:
  pull_request:
    branches: [ main ]

env:
  SKIP_COVERAGE_UPDATE: 1
  NUGET_SOURCE_URL: "https://nuget.pkg.github.com/cmannett85/index.json"
  VCPKG_BINARY_SOURCES: 'clear;nuget,vcpkg-cache,readwrite'
  BUILD_DIR: ${{ github.workspace }}/build
  INSTALL_DIR: ${{ github.workspace }}/install
  PACKAGE_BUILD_DIR: ${{ github.workspace }}/package_build
  DOWNLOAD_DIR: ${{ github.workspace }}/download

jobs:
  # Run the more esoteric/likely to succeed unit tests when merging to main
  sanitizer_unit_tests:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Update packages
      run: |
        sudo apt update
        sudo apt install ninja-build

    - name: Bootstrap vcpkg to build the NuGet client
      run: |
        ./vcpkg/bootstrap-vcpkg.sh -disableMetrics

    - name: Configure NuGet client
      run: |
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          sources add \
          -source ${{ env.NUGET_SOURCE_URL }} \
          -storepasswordincleartext \
          -name "vcpkg-cache" \
          -username "cmannett85" \
          -password "${{ secrets.GITHUB_TOKEN }}"
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source ${{ env.NUGET_SOURCE_URL }}

    - name: Build
      run: |
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        cmake ${{ github.workspace }} -G "Ninja" -DCMAKE_CXX_COMPILER=clang++-14 -DENABLE_SANITIZERS=ON -DDEATH_TEST_PARALLEL=2
        cmake --build . --target arg_router_test

    - name: Run unit tests under ASan/UBSan
      timeout-minutes: 30
      run: |
        cd ${{ env.BUILD_DIR }}/test
        ./arg_router_test -l test_suite

  new_gcc_test:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Update packages
      run: |
        sudo apt update
        sudo apt install ninja-build

    - name: Bootstrap vcpkg to build the NuGet client
      run: |
        ./vcpkg/bootstrap-vcpkg.sh -disableMetrics

    - name: Configure NuGet client
      run: |
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          sources add \
          -source ${{ env.NUGET_SOURCE_URL }} \
          -storepasswordincleartext \
          -name "vcpkg-cache" \
          -username "cmannett85" \
          -password "${{ secrets.GITHUB_TOKEN }}"
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source ${{ env.NUGET_SOURCE_URL }}

    - name: Build
      run: |
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        cmake ${{ github.workspace }} -G "Ninja" -DCMAKE_CXX_COMPILER=g++-11 -DDEATH_TEST_PARALLEL=2
        cmake --build . --target arg_router_test cpp17_examples cpp20_examples

    - name: Run unit tests
      timeout-minutes: 30
      run: |
        cd ${{ env.BUILD_DIR }}/test
        ./arg_router_test -l test_suite

  old_gcc_test:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Update packages
      run: |
        sudo apt update
        sudo apt install ninja-build

    - name: Bootstrap vcpkg to build the NuGet client
      run: |
        ./vcpkg/bootstrap-vcpkg.sh -disableMetrics

    - name: Configure NuGet client
      run: |
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          sources add \
          -source ${{ env.NUGET_SOURCE_URL }} \
          -storepasswordincleartext \
          -name "vcpkg-cache" \
          -username "cmannett85" \
          -password "${{ secrets.GITHUB_TOKEN }}"
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source ${{ env.NUGET_SOURCE_URL }}

    - name: Build
      run: |
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        cmake ${{ github.workspace }} -G "Ninja" -DCMAKE_CXX_COMPILER=g++-9 -DDEATH_TEST_PARALLEL=2 -DCMAKE_CXX_STANDARD=17
        cmake --build . --target arg_router_test cpp17_examples

    - name: Run unit tests
      timeout-minutes: 30
      run: |
        cd ${{ env.BUILD_DIR }}/test
        ./arg_router_test -l test_suite

  macos_compiler_tests:
    runs-on: macos-12

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Update packages
      run: |
        brew install clang-format

    - name: Bootstrap vcpkg to build the NuGet client
      run: |
        ./vcpkg/bootstrap-vcpkg.sh -disableMetrics

    - name: Configure NuGet client
      run: |
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          sources add \
          -source ${{ env.NUGET_SOURCE_URL }} \
          -storepasswordincleartext \
          -name "vcpkg-cache" \
          -username "cmannett85" \
          -password "${{ secrets.GITHUB_TOKEN }}"
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source ${{ env.NUGET_SOURCE_URL }}

    - name: Build
      run: |
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        cmake ${{ github.workspace }} -DDEATH_TEST_PARALLEL=3
        cmake --build . --target arg_router_test cpp17_examples cpp20_examples -j3

    - name: Run unit tests
      timeout-minutes: 30
      run: |
        cd ${{ env.BUILD_DIR }}/test
        ./arg_router_test -l test_suite

    - name: Test install
      run: |
        cd ${{ env.BUILD_DIR }}
        cmake --install . --prefix ${{ env.INSTALL_DIR }}
        cd ${{ env.INSTALL_DIR }}
        [[ -f "./include/arg_router/version.hpp" ]]
        [[ -f "./include/arg_router/README.md" ]]
        [[ -f "./include/arg_router/LICENSE" ]]
        [[ -f "./include/arg_router/arg_router-config.cmake" ]]
        [[ -f "./include/arg_router/arg_router-config-version.cmake" ]]

    - name: Test CMake package integrity
      run: |
        mkdir ${{ env.PACKAGE_BUILD_DIR }}
        cd ${{ env.PACKAGE_BUILD_DIR }}
        cmake ${{ github.workspace }}/scripts/ci/package_test_project -DCMAKE_PREFIX_PATH=${{ env.INSTALL_DIR }}/include
        cmake --build .

  # Test package integrity test where we use system libs and C++20 (so no nonstd::span)
  system_test_package:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Update packages
      run: |
        sudo apt update
        sudo apt install ninja-build libboost-dev

    - name: Build
      run: |
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        cmake ${{ github.workspace }} -G "Ninja" -DBUILD_UNIT_TESTS_AND_EXAMPLES=OFF -DDISABLE_VCPKG=ON -DDEATH_TEST_PARALLEL=2
        cmake --build .

    - name: Test install
      run: |
        cd ${{ env.BUILD_DIR }}
        cmake --install . --prefix ${{ env.INSTALL_DIR }}
        cd ${{ env.INSTALL_DIR }}
        [[ -f "./include/arg_router/version.hpp" ]]
        [[ -f "./include/arg_router/README.md" ]]
        [[ -f "./include/arg_router/LICENSE" ]]
        [[ -f "./include/arg_router/arg_router-config.cmake" ]]
        [[ -f "./include/arg_router/arg_router-config-version.cmake" ]]

    - name: Test CMake package integrity
      run: |
        mkdir ${{ env.PACKAGE_BUILD_DIR }}
        cd ${{ env.PACKAGE_BUILD_DIR }}
        cmake ${{ github.workspace }}/scripts/ci/package_test_project -DCMAKE_CXX_STANDARD=20 -DCMAKE_PREFIX_PATH=${{ env.INSTALL_DIR }}/include -DDISABLE_VCPKG=ON
        cmake --build .

  thirtytwobit_gcc_test:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Update packages
      run: |
        sudo apt update
        sudo apt install ninja-build g++-multilib

    - name: Bootstrap vcpkg to build the NuGet client
      run: |
        ./vcpkg/bootstrap-vcpkg.sh -disableMetrics

    - name: Configure NuGet client
      run: |
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          sources add \
          -source ${{ env.NUGET_SOURCE_URL }} \
          -storepasswordincleartext \
          -name "vcpkg-cache" \
          -username "cmannett85" \
          -password "${{ secrets.GITHUB_TOKEN }}"
        mono `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source ${{ env.NUGET_SOURCE_URL }}

    - name: Build
      run: |
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        cmake ${{ github.workspace }} -G "Ninja" -DCMAKE_CXX_COMPILER=g++-11 -DCMAKE_CXX_FLAGS=-m32 -DCMAKE_EXE_LINKER_FLAGS=-m32 -DVCPKG_OVERLAY_TRIPLETS=${{ github.workspace }}/cmake/triplets -DVCPKG_TARGET_TRIPLET=x86-linux -DDEATH_TEST_PARALLEL=2
        cmake --build . --target arg_router_test cpp17_examples cpp20_examples

    - name: Run unit tests
      timeout-minutes: 30
      run: |
        cd ${{ env.BUILD_DIR }}/test
        ./arg_router_test -l test_suite
